#pragma once
#ifndef __EXPLOIT_H__
#define __EXPLOIT_H__
#include"GObject/Player.h"
#include"GObject/Fighter.h"
#include"GObject/Var.h"
#include<time.h>
#include"Common/TimeUtil.h"

#define SOURCE_BASE 16    //
#define SAVE_MAX_TIME 20
#define EXPLOIT_TAB 3
#define SPEEDUP_TIME 60  //加速一小时
namespace GObject
{
    class Player;
    class Fighter;

    typedef enum ExploitType
    {
        WOOD = 0,   //木材
        LEATHER = 1, //皮革
        IRON = 2,    //铁
        COPPER = 3,  //铜
        MAX = 4
    } EpType;

    //采集点信息
    class ExploitInfo
    {
        public:
            ExploitInfo(UInt8 sourceId, Fighter* fighter) : id(sourceId) , fgt(fighter) {}
            ~ExploitInfo() {}
            Fighter* GetFighter() const { return fgt;}
            void SetFighter(Fighter* fighter) { fgt = fighter;}
            UInt8  GetId() const { return id;}
            UInt8 GetPerCount();
        private:
            UInt8  id;          //资源点编号
            Fighter* fgt;       //负责采集的武将
    };


    //采集管理
    class ExploitManager
    {
        public:
            ExploitManager(GObject::Player* player) : _owner(player){}
            void ReplaceFighter(UInt8 id,Fighter* fgt);
            Player* GetOwner() const { return _owner;}
            ExploitInfo* GetExploitInfo(UInt8 id);
            UInt32 GetSourceNum(UInt8 id);
            void CollectAllSource();
            void SpeedUp();
        private:
            Player* _owner;
            std::set<ExploitInfo*> _vecExploitInfo;
    };
}
#endif
